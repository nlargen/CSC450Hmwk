#inclue<stdio.h>
#include<stdlib.h>

// first function for merging together


void merge(int *arrg, int *left int leftcounter, int *right, int rightcounter)
{ 
     int i, j,k; 
     
     //just declaring some to use later 
     
     i=0; 
     j = 0; 
     k = 0; 
     while(i < leftcounter && j < rightcounter)
     {
          if(left[i] < right[j])
          {
               arrg[k++] = left[i++]; 
          }
          else 
          {
               arrg[k++] = right[j++]; 
          }
     }
     
     while(i < leftcount) 
     {
          arrg[k++] = left[i++];
     }
     
     while(j < rightcounter) 
     {
          arrg[k++] = right[j++]; 
     }
     
     // actual sorting stuffs for sorting array of ints 
     // yes i did this on my ipad Pro ** it really has a use
     
     void MergeSorter(int *arrg, int num)
     {
           int middle, i, *left, *right; 
           
           if(n<2) 
           {
                return
          }
          
          //why do unnessasary things ^^ 
          
          left = (int*) malloc(middle*sizeof(int)); 
          right = (int*)malloc(n-middle)*sizeof(int)); 
          
          for(i = 0; i < middle, i++) 
          {
               left[i] = arrg[i]; 
          }
          
          for(i = middle; i < n; i++) 
          {
               right[i - middle] = arrg[i]; 
          }
          
          MergeSorter(left,middle); 
          MergeSorter(right, n-middle);
          Merge(arrg,left,middle,right,n-middle);
          free(left);
          free(right); 
          
     }
     
     int main() 
     {
     
          int arrg[100] = rand() %10; 
          int i, number of elements for the list; 
          
          NoE = sizeof(arrg)/sizeof(arrg[0]);
          
          MergeSorter(arrg,NoE); 
          
          //display the results 
          
          for(i = 0; i < NoE; i++) 
          {
               printf("%d ", arrg[i]); 
               return 0; 
          }
     }